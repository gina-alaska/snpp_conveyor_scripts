#Convert the date format RTSTPS uses to gina's preferred formatting
#EX:  
#  Input:  RNSCA-RVIRS_npp_d20131115_t2002043_e2010492_b00001_c20131115204629862000_all-_dev.h5
#  Output: npp.13319.2002
def rtstps_date_to_gina( rdr )
	require 'date'
	fields = rdr.split("_")
	gina_date = DateTime.strptime(fields[2..3].join, "d%Y%m%dt%H%M%S").strftime("npp.%y%j.%H%M")	
	puts gina_date
	gina_date
end

require 'fileutils'

watch "#{ENV["WORK_DIR"]}/level0" do
	match /^RNSCA-RVIRS.*h5$/ do |path|
		rdr = File.basename(path)

		gina_name = rtstps_date_to_gina(rdr)
		sdr_dir = File.join(ENV["WORK_DIR"], "level1")
		sdr_work_dir = File.join(sdr_dir, gina_name, "viirs")
		#Get rid of the scratch space
		if File.exists?(sdr_work_dir) 
			FileUtils.rm_f(sdr_work_dir)
		end
		FileUtils.mkdir_p(sdr_work_dir)
		
		run "viirs_sdr.sh -W #{sdr_work_dir} -z -p 8 #{path}"
		Dir.chdir(File.join(sdr_work_dir)) do 
			Dir.glob("SVM05*.h5").each do |granule|
				run "run_viirs_crefl.sh #{File.realpath(granule)}"
			end
		end
			
		run "touch #{sdr_dir}/#{gina_name}.viirs.done"
	

		sdr_work_dir = File.join(sdr_dir, gina_name, "cris")
                if File.exists?(sdr_work_dir)
                        FileUtils.rm_f(sdr_work_dir)
                end
                FileUtils.mkdir_p(sdr_work_dir)
		#Really hacky way to find the associated cris rdr.
		#Timestamp isn't identical so a simple gsub of the sensor type isn't sufficient
		#First 29 characters (up to hour) isn't sufficient but is close enough
		##  If a pass comes in at the end of an hour, this will still potentially fail.
		##  Should be in it's own worker, but that has its own problems
		cris_rdr = Dir.glob("#{path.gsub(/RNSCA-RVIRS/, 'RCRIS-RNSCA')[0..28]}*").first
                run "cris_sdr.sh -w #{sdr_work_dir} -p 8 -z #{cris_rdr}"
                run "touch #{sdr_dir}/#{gina_name}.cris.done"

	end
end
